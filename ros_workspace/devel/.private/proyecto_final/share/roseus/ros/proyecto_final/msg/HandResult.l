;; Auto-generated. Do not edit!


(when (boundp 'proyecto_final::HandResult)
  (if (not (find-package "PROYECTO_FINAL"))
    (make-package "PROYECTO_FINAL"))
  (shadow 'HandResult (find-package "PROYECTO_FINAL")))
(unless (find-package "PROYECTO_FINAL::HANDRESULT")
  (make-package "PROYECTO_FINAL::HANDRESULT"))

(in-package "ROS")
;;//! \htmlinclude HandResult.msg.html


(defclass proyecto_final::HandResult
  :super ros::object
  :slots (_hand_data ))

(defmethod proyecto_final::HandResult
  (:init
   (&key
    ((:hand_data __hand_data) ())
    )
   (send-super :init)
   (setq _hand_data __hand_data)
   self)
  (:hand_data
   (&rest __hand_data)
   (if (keywordp (car __hand_data))
       (send* _hand_data __hand_data)
     (progn
       (if __hand_data (setq _hand_data (car __hand_data)))
       _hand_data)))
  (:serialization-length
   ()
   (+
    ;; proyecto_final/HandData[] _hand_data
    (apply #'+ (send-all _hand_data :serialization-length)) 4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; proyecto_final/HandData[] _hand_data
     (write-long (length _hand_data) s)
     (dolist (elem _hand_data)
       (send elem :serialize s)
       )
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; proyecto_final/HandData[] _hand_data
   (let (n)
     (setq n (sys::peek buf ptr- :integer)) (incf ptr- 4)
     (setq _hand_data (let (r) (dotimes (i n) (push (instance proyecto_final::HandData :init) r)) r))
     (dolist (elem- _hand_data)
     (send elem- :deserialize buf ptr-) (incf ptr- (send elem- :serialization-length))
     ))
   ;;
   self)
  )

(setf (get proyecto_final::HandResult :md5sum-) "2780ed3d510972b1ad13ff43244bdd9c")
(setf (get proyecto_final::HandResult :datatype-) "proyecto_final/HandResult")
(setf (get proyecto_final::HandResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
#result definition
HandData[] hand_data

================================================================================
MSG: proyecto_final/HandData
float32 x
float32 y
float32 z
bool is_open
bool is_peace
bool hand_detected
bool is_dino
bool is_dislike

")



(provide :proyecto_final/HandResult "2780ed3d510972b1ad13ff43244bdd9c")


